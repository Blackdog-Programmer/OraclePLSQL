Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
	SQL code used to arrive at answer:
	
	SELECT COUNT(*)
	FROM <table name>;
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

	SQL code used to arrive at answer:

	--Incase primary key: primary keys are always distinct and is not null by primary key constraint
	SELECT COUNT(*)
	FROM <table name>;

	--Incase foregin key
	SELECT COUNT(DISTINCT <foregin key>)
	FROM <table name>;

i. Business = 10000(id: primary key)
ii. Hours = 1562(business_id: foregin key)
iii. Category = 2643(business_id: foregin key)
iv. Attribute = 1115(business_id: foregin key)
v. Review = 10000(id: primary key), 8090(business_id: foregin key), 9581(user_id: foregin key)
vi. Checkin = 493(business_id: foregin key)
vii. Photo = 10000(id: primary key), 6493(business_id: foregin key)
viii. Tip = 537(user_id: foregin key), 3979(business_id: foregin key)
ix. User = 10000(id: primary key)
x. Friend = 11(user_id: foregin key)
xi. Elite_years = 2780(user_id: foregin key)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	SQL code used to arrive at answer:
	
	--user table has 20 columns
	--number in where conditions is each column number
	SELECT COUNT(*)
	FROM user
	WHERE 1 IS NULL OR 2 IS NULL OR 3 IS NULL OR 4 IS NULL OR 5 IS NULL OR 6 IS NULL OR 7 IS NULL OR 8 IS NULL OR 
		  9 IS NULL OR 10 IS NULL OR 11 IS NULL OR 12 IS NULL OR 13 IS NULL OR 14 IS NULL OR 15 IS NULL OR 
		  16 IS NULL OR 17 IS NULL OR 18 IS NULL OR 19 IS NULL OR 20 IS NULL;

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	SQL code used to arrive at answer:
	
	SELECT MIN(<column name>), MAX(<column name>), AVG(<column name>)
	FROM <table name>;
	
	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT city, SUM(review_count)
	FROM business
	GROUP BY city
	ORDER BY SUM(review_count) DESC;

	Copy and Paste the Result Below:
	
	+-----------------+-------------------+
	| city            | SUM(review_count) |
	+-----------------+-------------------+
	| Las Vegas       |             82854 |
	| Phoenix         |             34503 |
	| Toronto         |             24113 |
	| Scottsdale      |             20614 |
	| Charlotte       |             12523 |
	| Henderson       |             10871 |
	| Tempe           |             10504 |
	| Pittsburgh      |              9798 |
	| Montr√©al        |              9448 |
	| Chandler        |              8112 |
	| Mesa            |              6875 |
	| Gilbert         |              6380 |
	| Cleveland       |              5593 |
	| Madison         |              5265 |
	| Glendale        |              4406 |
	| Mississauga     |              3814 |
	| Edinburgh       |              2792 |
	| Peoria          |              2624 |
	| North Las Vegas |              2438 |
	| Markham         |              2352 |
	| Champaign       |              2029 |
	| Stuttgart       |              1849 |
	| Surprise        |              1520 |
	| Lakewood        |              1465 |
	| Goodyear        |              1155 |
	+-----------------+-------------------+
	(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

	SQL code used to arrive at answer:

	SELECT stars, COUNT(stars)
	FROM business
	WHERE city = 'Avon'
	GROUP BY stars
	ORDER BY stars ASC;

	Copy and Paste the Resulting Table Below (2 columns ?star rating and count):

	+-------+--------------+
	| stars | COUNT(stars) |
	+-------+--------------+
	|   1.5 |            1 |
	|   2.5 |            2 |
	|   3.5 |            3 |
	|   4.0 |            2 |
	|   4.5 |            1 |
	|   5.0 |            1 |
	+-------+--------------+

ii. Beachwood

	SQL code used to arrive at answer:

	SELECT stars, COUNT(stars)
	FROM business
	WHERE city = 'Beachwood'
	GROUP BY stars
	ORDER BY stars ASC;

	Copy and Paste the Resulting Table Below (2 columns ?star rating and count):
	
	+-------+--------------+
	| stars | COUNT(stars) |
	+-------+--------------+
	|   2.0 |            1 |
	|   2.5 |            1 |
	|   3.0 |            2 |
	|   3.5 |            2 |
	|   4.0 |            1 |
	|   4.5 |            2 |
	|   5.0 |            5 |
	+-------+--------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT name, sum(review_count) 
	FROM user
	GROUP BY id
	ORDER BY sum(review_count) DESC
	LIMIT 3;
		
	Copy and Paste the Result Below:

	+--------+-------------------+
	| name   | sum(review_count) |
	+--------+-------------------+
	| Gerald |              2000 |
	| Sara   |              1629 |
	| Yuri   |              1339 |
	+--------+-------------------+

8. Does posing more reviews correlate with more fans?

	SQL code used to arrive at answer:
	
	--https://www.investopedia.com/terms/r/r-squared.asp
	SELECT AVG((review_count - avg_x) * (fans - avg_y)) * 
		   AVG((review_count - avg_x) * (fans - avg_y) ) / (var_x * var_y) as R_Square
	FROM user, (SELECT avg_x, avg_y,
					AVG((review_count - avg_x) * (review_count - avg_x)) as var_x, 
					AVG((fans - avg_y) * (fans - avg_y)) as var_y 
				FROM user, (SELECT AVG(review_count) as avg_x, 
								   AVG(fans) as avg_y 
							FROM user)
				);
	
	Copy and Paste the Result Below:
	
	+----------------+
	|       R_Square |
	+----------------+
	| 0.437136492915 |
	+----------------+
	
	Following the result of R_Square. review and fans are partly correlated.
	
	
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: 
		Reviews containing hate: 232
		Reviews containing Love: 1780
		There are more reviews containing "love" compared to "hate"


	SQL code used to arrive at answer:
	
	SELECT COUNT(*)
	FROM review
	WHERE text LIKE '%love%';

	Copy and Paste the Result Below:
	
	+----------+
	| COUNT(*) |
	+----------+
	|     1780 |
	+----------+
	
	SELECT COUNT(*)
	FROM review
	WHERE text LIKE '%hate%';
	
	+----------+
	| COUNT(*) |
	+----------+
	|      232 |
	+----------+

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT name, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:

	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as useful? or funny?

	Key:
	0% - 25% - Low relationship
	26% - 75% - Medium relationship
	76% - 100% - Strong relationship

	Please explain your findings and interpretation of the results:
	
		https://en.wikipedia.org/wiki/Correlation_and_dependence
		
		corrleation is 0.1408044
		
		So there is a low relation ship between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans

	
	
	SQL code used to arrive at answer:

		SELECT name, fans, useful
		FROM user
		ORDER BY fans DESC
		LIMIT 10;

	
	Copy and Paste the Result Below:
	
		+-----------+------+--------+
		| name      | fans | useful |
		+-----------+------+--------+
		| Amy       |  503 |   3226 |
		| Mimi      |  497 |    257 |
		| Harald    |  311 | 122921 |
		| Gerald    |  253 |  17524 |
		| Christine |  173 |   4834 |
		| Lisa      |  159 |     48 |
		| Cat       |  133 |   1062 |
		| William   |  126 |   9363 |
		| Fran      |  124 |   9851 |
		| Lissa     |  120 |    455 |
		+-----------+------+--------+
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
	i. Do the two groups you chose to analyze have a different distribution of hours?


	ii. Do the two groups you chose to analyze have a different number of reviews?


         
	iii. Are you able to infer anything from the location data provided between these two groups? Explain.


			
	SQL code used for analysis:

		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
	i. Difference 1: Open businesses have more reviews than closed businesses.
         
   
	ii. Difference 2: Closed businesses have few stars, so have to close.
             
         
	SQL code used for analysis:


	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
	i. Indicate the type of analysis you chose to do:


         
	ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:


                  
	iii. Output of your finished dataset:

         
	iv. Provide the SQL code you used to create your final dataset:

